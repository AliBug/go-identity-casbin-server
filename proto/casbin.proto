syntax = "proto3";
package proto;
option go_package = "github.com/alibug/go-identity-casbin-server/gen/casbin/proto";

message BoolReply {
  bool res = 1;
}

message PermissionRequest {
  string user = 1;
  repeated string permissions = 2;
}

message PolicyRequest {
  string pType = 1;
  repeated string params = 2;
}

message FilteredPolicyRequest {
  string pType = 2;
  int32 fieldIndex = 3;
  repeated string fieldValues = 4;
}

message EmptyRequest {
}

message UserRoleInDomainRequest {
  string user = 1;
  string domain = 2;
  string role = 3;
}

/*
message UserRequest {
  string user = 1;
}

message StringRequest {
  string data = 1;
}
*/

message ArrayReply {
  repeated string data =1 ;
}

message MapArrayReply {
  map<string, ArrayReply> data = 1;
}

message Array2DReply {
  repeated ArrayReply data = 1;
}

/*
AddRoleForUserInDomainUC(userRoleinDomain _domain.UserDomainRoleRequest) (bool, error)
	DeleteRoleForUserInDomainUC(userRoleinDomain _domain.UserDomainRoleRequest) (bool, error)
	DeleteRolesForUserInDomainUC(userRoleinDomain _domain.UserDomainRoleRequest) (bool, error)
	GetDomainsForUserUC(name string) ([]string, error)
	GetRolesForUserInDomainUC(name string, domain string) []string
	GetRolesInDomainsForUserUC(name string) (map[string][]string, error)
*/

service Casbin {
  rpc HasPermissionForUser (PermissionRequest) returns (BoolReply) {}
  rpc AddRoleForUserInDomain(UserRoleInDomainRequest) returns (BoolReply) {}
  rpc DeleteRoleForUserInDomain(UserRoleInDomainRequest) returns (BoolReply) {}
  rpc DeleteRolesForUserInDomain(UserRoleInDomainRequest) returns (BoolReply) {}
  rpc GetDomainsForUser(UserRoleInDomainRequest) returns (ArrayReply) {}
  rpc GetRolesForUserInDomain(UserRoleInDomainRequest) returns (ArrayReply) {}
  rpc GetRolesInDomainsForUser(UserRoleInDomainRequest) returns (MapArrayReply) {}

  rpc DeleteUser(UserRoleInDomainRequest)returns (BoolReply) {}

  // rpc GetPolicies(EmptyRequest) returns (Array2DReply) {}
  // rpc GetPoliciesInDomain(UserRoleInDomainRequest) returns (Array2DReply) {}
  rpc GetNamedPolicy (PolicyRequest) returns (Array2DReply) {}
  rpc GetFilteredNamedPolicy (FilteredPolicyRequest) returns (Array2DReply) {}
  rpc AddNamedPolicy(PolicyRequest) returns (BoolReply) {}
  rpc AddPolicy (PolicyRequest) returns (BoolReply) {}
  rpc RemoveNamedPolicy(PolicyRequest) returns (BoolReply) {}
  rpc RemovePolicy (PolicyRequest) returns (BoolReply) {}
}

/*
		RemoveFilteredNamedPolicy(domain string) (bool, error)
		DeleteUser(userID string) (bool, error)
*/

