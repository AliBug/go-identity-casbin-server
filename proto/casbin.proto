syntax = "proto3";
package proto;
option go_package = "github.com/alibug/go-identity-casbin-server/gen/casbin/proto";

message BoolReply {
  bool res = 1;
}

message PermissionRequest {
  string user = 1;
  repeated string permissions = 2;
}

message EmptyRequest {
}

message UserRoleInDomainRequest {
  string user = 1;
  string domain = 2;
  string role = 3;
}

message UserRequest {
  string user = 1;
}

message StringArrayReply {
  repeated string data =1 ;
}

message MapStringArrayReply {
  map<string, StringArrayReply> data = 1;
}

message StringArray2DReply {
  repeated StringArrayReply data = 1;
}

/*
AddRoleForUserInDomainUC(userRoleinDomain _domain.UserDomainRoleRequest) (bool, error)
	DeleteRoleForUserInDomainUC(userRoleinDomain _domain.UserDomainRoleRequest) (bool, error)
	DeleteRolesForUserInDomainUC(userRoleinDomain _domain.UserDomainRoleRequest) (bool, error)
	GetDomainsForUserUC(name string) ([]string, error)
	GetRolesForUserInDomainUC(name string, domain string) []string
	GetRolesInDomainsForUserUC(name string) (map[string][]string, error)
*/

service Casbin {
  rpc HasPermissionForUser (PermissionRequest) returns (BoolReply) {}
  rpc AddRoleForUserInDomain(UserRoleInDomainRequest) returns (BoolReply) {}
  rpc DeleteRoleForUserInDomain(UserRoleInDomainRequest) returns (BoolReply) {}
  rpc DeleteRolesForUserInDomain(UserRoleInDomainRequest) returns (BoolReply) {}
  rpc GetDomainsForUser(UserRequest) returns (StringArrayReply) {}
  rpc GetRolesForUserInDomain(UserRoleInDomainRequest) returns (StringArrayReply) {}
  rpc GetRolesInDomainsForUser(UserRequest) returns (MapStringArrayReply) {}

  rpc GetPolicies(EmptyRequest) returns (StringArray2DReply) {}
}

